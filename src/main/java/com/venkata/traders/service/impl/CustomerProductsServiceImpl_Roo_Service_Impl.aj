// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.venkata.traders.service.impl;

import com.venkata.traders.domain.Customer;
import com.venkata.traders.domain.CustomerProducts;
import com.venkata.traders.repository.CustomerProductsRepository;
import com.venkata.traders.service.impl.CustomerProductsServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CustomerProductsServiceImpl_Roo_Service_Impl {
    
    declare @type: CustomerProductsServiceImpl: @Service;
    
    declare @type: CustomerProductsServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CustomerProductsRepository CustomerProductsServiceImpl.customerProductsRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param customerProductsRepository
     */
    @Autowired
    public CustomerProductsServiceImpl.new(CustomerProductsRepository customerProductsRepository) {
        setCustomerProductsRepository(customerProductsRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CustomerProductsRepository
     */
    public CustomerProductsRepository CustomerProductsServiceImpl.getCustomerProductsRepository() {
        return customerProductsRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerProductsRepository
     */
    public void CustomerProductsServiceImpl.setCustomerProductsRepository(CustomerProductsRepository customerProductsRepository) {
        this.customerProductsRepository = customerProductsRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerProducts
     */
    @Transactional
    public void CustomerProductsServiceImpl.delete(CustomerProducts customerProducts) {
        // Clear bidirectional many-to-one child relationship with Customer
        if (customerProducts.getCustomer() != null) {
            customerProducts.getCustomer().getCustomerProducts().remove(customerProducts);
        }
        
        // Clear bidirectional one-to-one parent relationship with Product
        customerProducts.removeFromProduct();
        
        getCustomerProductsRepository().delete(customerProducts);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<CustomerProducts> CustomerProductsServiceImpl.save(Iterable<CustomerProducts> entities) {
        return getCustomerProductsRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CustomerProductsServiceImpl.delete(Iterable<Long> ids) {
        List<CustomerProducts> toDelete = getCustomerProductsRepository().findAll(ids);
        getCustomerProductsRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return CustomerProducts
     */
    @Transactional
    public CustomerProducts CustomerProductsServiceImpl.save(CustomerProducts entity) {
        
        // Ensure the relationships are maintained
        entity.addToProduct(entity.getProduct());
        
        return getCustomerProductsRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerProducts
     */
    public CustomerProducts CustomerProductsServiceImpl.findOne(Long id) {
        return getCustomerProductsRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerProducts
     */
    public CustomerProducts CustomerProductsServiceImpl.findOneForUpdate(Long id) {
        return getCustomerProductsRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<CustomerProducts> CustomerProductsServiceImpl.findAll(Iterable<Long> ids) {
        return getCustomerProductsRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<CustomerProducts> CustomerProductsServiceImpl.findAll() {
        return getCustomerProductsRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CustomerProductsServiceImpl.count() {
        return getCustomerProductsRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerProducts> CustomerProductsServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCustomerProductsRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerProducts> CustomerProductsServiceImpl.findByCustomer(Customer customer, GlobalSearch globalSearch, Pageable pageable) {
        return getCustomerProductsRepository().findByCustomer(customer, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @return Long
     */
    public long CustomerProductsServiceImpl.countByCustomer(Customer customer) {
        return getCustomerProductsRepository().countByCustomer(customer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<CustomerProducts> CustomerProductsServiceImpl.getEntityType() {
        return CustomerProducts.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CustomerProductsServiceImpl.getIdType() {
        return Long.class;
    }
    
}
