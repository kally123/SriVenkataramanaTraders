// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.venkata.traders.web;

import com.venkata.traders.domain.CustomerProducts;
import com.venkata.traders.service.api.CustomerProductsService;
import com.venkata.traders.web.CustomerProductssItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect CustomerProductssItemJsonController_Roo_JSON {
    
    declare @type: CustomerProductssItemJsonController: @RestController;
    
    declare @type: CustomerProductssItemJsonController: @RequestMapping(value = "/customerproductss/{customerProducts}", name = "CustomerProductssItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param customerProductsService
     */
    @Autowired
    public CustomerProductssItemJsonController.new(CustomerProductsService customerProductsService) {
        this.customerProductsService = customerProductsService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerProducts
     */
    @ModelAttribute
    public CustomerProducts CustomerProductssItemJsonController.getCustomerProducts(@PathVariable("customerProducts") Long id) {
        CustomerProducts customerProducts = customerProductsService.findOne(id);
        if (customerProducts == null) {
            throw new NotFoundException(String.format("CustomerProducts with identifier '%s' not found",id));
        }
        return customerProducts;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerProducts
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> CustomerProductssItemJsonController.show(@ModelAttribute CustomerProducts customerProducts) {
        return ResponseEntity.ok(customerProducts);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerProducts
     * @return UriComponents
     */
    public static UriComponents CustomerProductssItemJsonController.showURI(CustomerProducts customerProducts) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(CustomerProductssItemJsonController.class).show(customerProducts))
            .buildAndExpand(customerProducts.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedCustomerProducts
     * @param customerProducts
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> CustomerProductssItemJsonController.update(@ModelAttribute CustomerProducts storedCustomerProducts, @Valid @RequestBody CustomerProducts customerProducts, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        customerProducts.setId(storedCustomerProducts.getId());
        getCustomerProductsService().save(customerProducts);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerProducts
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CustomerProductssItemJsonController.delete(@ModelAttribute CustomerProducts customerProducts) {
        getCustomerProductsService().delete(customerProducts);
        return ResponseEntity.ok().build();
    }
    
}
